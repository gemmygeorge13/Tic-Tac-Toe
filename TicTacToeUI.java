/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.TicTacToe;
import java.io.*;
import javax.swing.JOptionPane;
import java.util.Random;

/**
 *
 * @author Gemmy George
 */
public class TicTacToeUI extends javax.swing.JFrame {
    
    protected static int isRunning=1;
    protected static boolean compTurn=false;
    public static int b[][]={{2,2,2},{2,2,2},{2,2,2}};  
    /**
     * Creates new form TicTacToeUI
     */
    public TicTacToeUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tic-Tac-Toe by Gemmy George");
        setBackground(new java.awt.Color(204, 204, 255));
        setType(java.awt.Window.Type.POPUP);

        jLabel1.setBackground(new java.awt.Color(51, 255, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setToolTipText("");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(51, 255, 0));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(51, 255, 0));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel3.setOpaque(true);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(51, 255, 0));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel4.setOpaque(true);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(102, 255, 0));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel5.setOpaque(true);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(102, 255, 0));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel6.setOpaque(true);
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(102, 255, 0));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel7.setOpaque(true);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(102, 255, 0));
        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel8.setOpaque(true);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(102, 255, 0));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        jLabel9.setOpaque(true);
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jButton1.setText("EXIT");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Restart");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
      if (jLabel1.getText().equals("O") || jLabel1.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      
      if(jLabel1.getText().equals("") && isRunning==1)
      {
          jLabel1.setText("X");
          b[0][0]=1;
         
      }
      
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      
      
      if (isRunning==1 && compTurn==true)
      {
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }         // ELSE FOR DRAW
      } 
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
                                            
      if (jLabel2.getText().equals("O") || jLabel2.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel2.getText().equals("") && isRunning==1)
      {
          jLabel2.setText("X");
          b[0][1]=1;
      }
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
     {
      
         compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
      if (jLabel3.getText().equals("O") || jLabel3.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel3.getText().equals("") && isRunning==1)
      {
          jLabel3.setText("X");
          b[0][2]=1;
      }
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
      {
        
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
       if (jLabel4.getText().equals("O") || jLabel4.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel4.getText().equals("") && isRunning==1)
      {
          jLabel4.setText("X");
          b[1][0]=1;
      }
     
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
      {
          
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
      if (jLabel5.getText().equals("O") || jLabel5.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel5.getText().equals("") && isRunning==1)
      {
          jLabel5.setText("X");
          b[1][1]=1;
      }
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
      {
         
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
     if (jLabel6.getText().equals("O") || jLabel6.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel6.getText().equals("") && isRunning==1)
      {
          jLabel6.setText("X");
          b[1][2]=1;
      }
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
      {
        
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
       if (jLabel7.getText().equals("O") || jLabel7.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel7.getText().equals("") && isRunning==1)
      {
          jLabel7.setText("X");
          b[2][0]=1;
      }
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
      {
    
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
       if (jLabel8.getText().equals("O") || jLabel8.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel8.getText().equals("") && isRunning==1)
      {
          jLabel8.setText("X");
          b[2][1]=1;
      }
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
      {
         
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
       if (jLabel9.getText().equals("O") || jLabel9.getText().equals("X") || isRunning==0)
      JOptionPane.showMessageDialog(this, "Wrong Input");
      else{
      if(jLabel9.getText().equals("") && isRunning==1)
      {
          jLabel9.setText("X");
          b[2][2]=1;
      }
      
      if(winCondition(1)==1)            
      {
          JOptionPane.showMessageDialog(this,"You Win");
                isRunning=0;
      }
      
      for(int r=0;r<3;r++)
      {
          for(int t=0;t<3;t++)
          {
              if(b[r][t]==2)
                  compTurn=true;
          }
      }
      
      if (isRunning==1 && compTurn==true)
      {
         
          compTurn=false;
          if(check1()==1 )
          {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
          }
          else if(check2()==1 && isRunning==1)
          {
              if (winCondition(0)==1)
              {
              JOptionPane.showMessageDialog(this,"Computer Wins");
                  isRunning=0;
              }
          }
          else
          {
              tr: for(int iy=0;iy<1000;iy++)
	{
	int choice=Random();
	switch(choice)
		{
		case 0:
		if(b[0][0]!=2)
		{
		continue tr;
		}
		else
		b[0][0]=0;
                jLabel1.setText("O");            
		break;
		
		
		case 1:
		if(b[0][1]!=2)
		{
		continue tr;
		}
		else
		b[0][1]=0;
                jLabel2.setText("O");   
		break;
		

		
		case 2:
		if(b[0][2]!=2)
		{
		continue;
		}
		else
		b[0][2]=0;
                jLabel3.setText("O");   
		break;
		

		
		case 3:
		if(b[1][0]!=2)
		{
		continue tr;
		}
		else
		b[1][0]=0;
                jLabel4.setText("O");   
		break;
		

		
		case 4:
		if(b[1][1]!=2)
		{
		continue tr;
		}
		else
		b[1][1]=0;
                jLabel5.setText("O");   
		break;
	

		case 5:
		if(b[1][2]!=2)
		{
		continue tr;
		}
		else
		b[1][2]=0;
                jLabel6.setText("O");   
		break;



		case 6:
		if(b[2][0]!=2)
		{
 		continue tr;
		}
		else
		b[2][0]=0;
                jLabel7.setText("O");   
		break;


		case 7:
		if(b[2][1]!=2)
		{
		continue tr;
      
		}
		else
		b[2][1]=0;
                jLabel8.setText("O");   
		break;


		case 8:
		if(b[2][2]!=2)
		{
		continue tr;
		}
		else
		b[2][2]=0;
                jLabel9.setText("O");   
		
		}break;
	}	                                                                               //try again looop 2
          }
          
          
          
      } 
      else
      {
       if(isRunning==1)
          JOptionPane.showMessageDialog(this,"Draw");
      }     
      }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        JOptionPane.showMessageDialog(this, "Thanks for playing ! ");
        System.exit(0);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        for(int q=0;q<3;q++)
        {
            for(int w=0;w<3;w++)
                b[q][w]=2;
        }
        isRunning=1; compTurn=false;
        jLabel1.setText("");
        jLabel2.setText("");
        jLabel3.setText("");
        jLabel4.setText("");
        jLabel5.setText("");
        jLabel6.setText("");
        jLabel7.setText("");
        jLabel8.setText("");
        jLabel9.setText("");
    }//GEN-LAST:event_jButton2MouseClicked

    
  public int winCondition(int a)
 {
  int iswin=0;
  for(int u=0;u<3;u++)
  {
	if (b[u][0]==a && b[u][1]==a && b[u][2]==a)
	{ iswin=1; }
	if (b[0][u]==a && b[1][u]==a && b[2][u]==a)
	{ iswin=1; }
	if (b[0][0]==a && b[1][1]==a && b[2][2]==a)
	{ iswin=1; }
        if (b[2][0]==a && b[1][1]==a && b[0][2]==a)
	{ iswin=1; }
  }
  return iswin;
 }
  
  public static int Random()
 {
   Random randomGenerator = new Random();
   int randomInt = randomGenerator.nextInt(9);
   //char a=(char)randomInt;
   return(randomInt);
 }
  
 public int check1()                                                                    //check 1
{
 int checkone=0;
 for(int v=0;v<3;v++)
 {
	if(b[v][0]==0 && b[v][1]==0 && b[v][2]==2)
	{
	b[v][2]=0;
        if(v==0)
        {
            jLabel3.setText("O");
        }
        if(v==1)
        {
            jLabel6.setText("O");
        }
        if(v==2)
        {
            jLabel9.setText("O");
        }
	checkone=1; break;
	}
	if(b[v][0]==0 && b[v][1]==2 && b[v][2]==0)
	{
	b[v][1]=0;
        if(v==0)
        {
            jLabel2.setText("O");
        }
        if(v==1)
        {
            jLabel5.setText("O");
        }
        if(v==2)
        {
            jLabel8.setText("O");
        }
	checkone=1; break;
	}
	if(b[v][0]==2 && b[v][1]==0 && b[v][2]==0)
	{
	b[v][0]=0;
        if(v==0)
        {
            jLabel1.setText("O");
        }
        if(v==1)
        {
            jLabel4.setText("O");
        }
        if(v==2)
        {
            jLabel7.setText("O");
        }
	checkone=1; break;
	}
	if(b[0][v]==0 && b[1][v]==0 && b[2][v]==2)
	{
	b[2][v]=0;
        if(v==0)
        {
            jLabel7.setText("O");
        }if(v==1)
        {
            jLabel8.setText("O");
        }if(v==2)
        {
            jLabel9.setText("O");
        }
	checkone=1; break;
	}
	if(b[0][v]==0 && b[1][v]==2 && b[2][v]==0)
	{
	b[1][v]=0;if(v==0)
        {
            jLabel4.setText("O");
        }if(v==1)
        {
            jLabel5.setText("O");
        }if(v==2)
        {
            jLabel6.setText("O");
        }
	checkone=1; break;
	}
	if(b[0][v]==2 && b[1][v]==0 && b[2][v]==0)
	{
	b[0][v]=0;
        if(v==0)
        {
            jLabel1.setText("O");
        }if(v==1)
        {
            jLabel2.setText("O");
        }if(v==2)
        {
            jLabel3.setText("O");
        }
	checkone=1; break;
	}
 }
                if (checkone==1) {}
	else
	{
	for(int none=1;none<2;none++)
	{
	if(b[0][0]==0 && b[1][1]==0 && b[2][2]==2)
	{
	b[2][2]=0;jLabel9.setText("O");
	checkone=1; break;
	}
	if(b[0][0]==0 && b[1][1]==2 && b[2][2]==0)
	{
	b[1][1]=0;jLabel5.setText("O");
	checkone=1; break;
	}
	if(b[0][0]==2 && b[1][1]==0 && b[2][2]==0)
	{
	b[0][0]=0;jLabel1.setText("O");
	checkone=1; break;
	}
	if(b[0][2]==0 && b[1][1]==0 && b[2][0]==2)
	{
	b[2][0]=0;jLabel7.setText("O");
	checkone=1; break;
	}
	if(b[0][2]==0 && b[1][1]==2 && b[2][0]==0)
	{
	b[1][1]=0;jLabel5.setText("O");
	checkone=1; break;
	}
	if(b[0][2]==2 && b[1][1]==0 && b[2][0]==0)
	{
	b[0][2]=0;jLabel3.setText("O");
	checkone=1; break;
	}
	}
	}
	return checkone;
  }
    
 
 
 
 
public int check2()                                                                    //check 2
{
 int checktwo=0;
 for(int v=0;v<3;v++)
 {
	if(b[v][0]==1 && b[v][1]==1 && b[v][2]==2)
	{
	b[v][2]=0;
        if(v==0)
        {
            jLabel3.setText("O");
        }
        if(v==1)
        {
            jLabel6.setText("O");
        }
        if(v==2)
        {
            jLabel9.setText("O");
        }
	checktwo=1; break;
	}
	if(b[v][0]==1 && b[v][1]==2 && b[v][2]==1)
	{
	b[v][1]=0;
        if(v==0)
        {
            jLabel2.setText("O");
        }
        if(v==1)
        {
            jLabel5.setText("O");
        }
        if(v==2)
        {
            jLabel8.setText("O");
        }
	checktwo=1; break;
	}
	if(b[v][0]==2 && b[v][1]==1 && b[v][2]==1)
	{
	b[v][0]=0;
        if(v==0)
        {
            jLabel1.setText("O");
        }
        if(v==1)
        {
            jLabel4.setText("O");
        }
        if(v==2)
        {
            jLabel7.setText("O");
        }
	checktwo=1; break;
	}
	if(b[0][v]==1 && b[1][v]==1 && b[2][v]==2)
	{
	b[2][v]=0;
        if(v==0)
        {
            jLabel7.setText("O");
        }
        if(v==1)
        {
            jLabel8.setText("O");
        }
        if(v==2)
        {
            jLabel9.setText("O");
        }
	checktwo=1; break;
	}
	if(b[0][v]==1 && b[1][v]==2 && b[2][v]==1)
	{
	b[1][v]=0;
        if(v==0)
        {
            jLabel4.setText("O");
        }if(v==1)
        {
            jLabel5.setText("O");
        }if(v==2)
        {
            jLabel6.setText("O");
        }
	checktwo=1; break;
	}
	if(b[0][v]==2 && b[1][v]==1 && b[2][v]==1)
	{
	b[0][v]=0;
        if(v==0)
        {
            jLabel1.setText("O");
        }
        if(v==1)
        {
            jLabel2.setText("O");
        }
        if(v==2)
        {
            jLabel3.setText("O");
        }
	checktwo=1; break;
	}
 }
                if (checktwo==1) {}
	else
	{
	for(int none=1;none<2;none++)
	{
	if(b[0][0]==1 && b[1][1]==1 && b[2][2]==2)
	{
	b[2][2]=0;
        jLabel9.setText("O");
	checktwo=1; break;
	}
	if(b[0][0]==1 && b[1][1]==2 && b[2][2]==1)
	{
	b[1][1]=0;
        jLabel5.setText("O");
	checktwo=1; break;
	}
	if(b[0][0]==2 && b[1][1]==1 && b[2][2]==1)
	{
	b[0][0]=0;
        jLabel1.setText("O");
	checktwo=1; break;
	}
	if(b[0][2]==1 && b[1][1]==1 && b[2][0]==2)
	{
	b[2][0]=0;
        jLabel7.setText("O");
	checktwo=1; break;
	}
	if(b[0][2]==1 && b[1][1]==2 && b[2][0]==1)
	{
	b[1][1]=0;
        jLabel5.setText("O");
	checktwo=1; break;
	}
	if(b[0][2]==2 && b[1][1]==1 && b[2][0]==1)
	{
	b[0][2]=0;
        jLabel3.setText("O");
	checktwo=1; break;
	}
	}
	}
	return checktwo;
  }

public void delayIt(){
    for(int asr=0;asr<1000;asr++)
        System.out.print("");
}




 
    /* @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        int ch1;
        System.out.print("\n\n\n\n\t\t\tGemmy George");
        try{Thread.currentThread().sleep(1000);}catch(Exception e){}
        System.out.print("\n\n\n\t\t\t  Presents  ");
        try{Thread.currentThread().sleep(1000);}catch(Exception e){}
        System.out.print("\n\n\n\t\t\tTic");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print(" Tac");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print(" Toe");
        try{Thread.currentThread().sleep(1000);}catch(Exception e){}
        do{
        System.out.print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
        System.out.print("\t\t\t   MENU");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print("\n\n\t\t1. New Game");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print("\n\n\t\t2. How to play");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print("\n\n\t\t3. Credits");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print("\n\n\t\t4. About");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print("\n\n\t\t5. QUIT");
        try{Thread.currentThread().sleep(500);}catch(Exception e){}
        System.out.print("\n\n\n Enter the number corresponding to your choice: ");
        
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        try{ch1=Integer.parseInt(br.readLine());
        switch(ch1)
        {
            case 1:    
                for(int q=0;q<3;q++)
        {
            for(int w=0;w<3;w++)
                b[q][w]=2;
        }
        isRunning=1; compTurn=false;
                System.out.print("\n\n\n\n\n\n\n\t\tLoading Game Engine");
                for(int g=0;g<10;g++)
                {
                    System.out.print(".");
                    try{Thread.currentThread().sleep(250);}catch(Exception e){}
                }
                System.out.print("\n\n\t\tLoading Computer AI");
                for(int g=0;g<10;g++)
                {
                    System.out.print(".");
                    try{Thread.currentThread().sleep(250);}catch(Exception e){}
                }
                System.out.print("\n\n\t\t   Game Started!");
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TicTacToeUI().setVisible(true);
                
            }
        });
        br.readLine();
        break;
                
            case 2:
                System.out.print("\n\n\n\n\n\t\t\tHOW TO PLAY");
                try{Thread.currentThread().sleep(950);}catch(Exception e){}
                System.out.print("\n\n\n\n\tTic-Tac-Toe, also known as X's and O's is a simple game, ");
                System.out.print("\n\twhere 2 players take turns marking crosses and zeroes on a ");
                System.out.print("\n\t3x3 grid. The X player usually goes first. The player who ");
                System.out.print("\n\tsucceeds in placing 3 respective marks in horizontal, ");
                System.out.print("\n\tvertical or diagonal row wins the game.");
                System.out.print("\n\n\t In this game, you play X and the computer plays O.");
                System.out.print("\n\tSelect \"New Game\" from Main menu, to start the game.");
                System.out.print("\n\tOnce the game starts,click on one of the grid to select your");
                System.out.print("\n\tposition to place X.");
                System.out.print("\n\tThe computer with its smartAI (designed by Gemmy George) ");
                System.out.print("\n\twill play O and try to defeat you!");
                System.out.print("\n\tSo, do you have what it takes to defeat the computer? Lets see...");
                System.out.print("\n\n\tNote: visit: en.wikipedia.org/wiki/Tic-tac-toe for more info");
                System.out.print("\n\tregarding the origin and stratagies of this game.\n\n\n\n");
                br.readLine();
            break;
                
            case 3:
                System.out.print("\n\n\n\n\t\t\t CREDITS");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t\tProject Lead - Gemmy George");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t\tProduced by  - Gemmy George ");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t\tProgrammed by - Gemmy George");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t\tCore Design  - Gemmy George");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t\tGUI Design   - Gemmy George");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t\tComputer AI  - Gemmy George");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t\tVisual Effects- Gemmy George");
                //System.out.print("\n\n\t\tTested by   - TBA");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\tSpecial thanks to Victor Fernandes for file hosting info");
                try{Thread.currentThread().sleep(350);}catch(Exception e){}
                System.out.print("\n\n\t   Programmed using Java SE NetBeans IDE 7.1.2\n\n\n");
                br.readLine();
                break;
                
            case 4:
                System.out.print("\n\n\n\n\t\t\t  ABOUT");
                try{Thread.currentThread().sleep(500);}catch(Exception e){}
                System.out.print("\n\n\n\tTic-Tac-Toe");
                System.out.print("\n\n\tVerision - 1.0.1");
                System.out.print("\n\n\tCopyright 2012 - GEMMY GEORGE");
                System.out.print("\n\n\tAll Rights Reserved");
                try{Thread.currentThread().sleep(750);}catch(Exception e){}
                System.out.print("\n\n\n\tThis game is intended for home use only and not for");
                System.out.print("\n\tcommercial purposes. ");
                System.out.print("\n\n\tUnder no circumstances is it permitted for any person,");
                System.out.print("\n\tcompany or organization to reproduce, distribute, decompile, ");
                System.out.print("\n\treverse engineer, adapt, synchronize, either the full or part");
                System.out.print("\n\tof this game.");
                System.out.print("\n\tAny violation constitues copyright infringement which is");
                System.out.print("\n\ta federal offence punishable under applicable laws. ");
                try{Thread.currentThread().sleep(2000);}catch(Exception e){}
                System.out.print("\n\n\tEnter to go back to main menu...\n");
                br.readLine();
                break;
                
                
            case 5:
                System.out.print("\n\n\n\tExiting in 3");
                
                for(int io=0;io<3;io++)
                {try{Thread.currentThread().sleep(250);}catch(Exception e){}
                    System.out.print(".");}
                try{Thread.currentThread().sleep(250);}catch(Exception e){}
                System.out.print("2");
                for(int io=0;io<3;io++)
                {try{Thread.currentThread().sleep(250);}catch(Exception e){}
                    System.out.print(".");}
                try{Thread.currentThread().sleep(250);}catch(Exception e){}
                System.out.print("1");
                for(int io=0;io<3;io++)
                {try{Thread.currentThread().sleep(250);}catch(Exception e){}
                    System.out.print(".");}
                try{Thread.currentThread().sleep(250);}catch(Exception e){}
                        
                System.exit(0);
        } }catch(NumberFormatException e){}
                       }while(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
 

 
}
